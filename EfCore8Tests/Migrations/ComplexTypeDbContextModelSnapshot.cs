// <auto-generated />
using System.Collections.Generic;
using EfCore8Tests.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfCore8Tests.Migrations
{
    [DbContext(typeof(ComplexTypeDbContext))]
    partial class ComplexTypeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-rc.1.23419.6")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EfCore8Tests.Models.UserContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.ComplexProperty<Dictionary<string, object>>("CompanyIdentificationData", "EfCore8Tests.Models.UserContext.CompanyIdentificationData#CompanyIdentificationData", b1 =>
                        {
                            .IsRequired()
                            b1.Property<bool>("Val")
                                .HasColumnType("bit");

                            b1.ComplexProperty<Dictionary<string, object>>("Belgium", "EfCore8Tests.Models.UserContext.CompanyIdentificationData#CompanyIdentificationData.Belgium#BelgiumCompanyIdentificationData", b2 =>
                                {
                                    .IsRequired()
                                    b2.Property<string>("EntityBceNumber")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<bool>("HasVATNumber")
                                        .HasColumnType("bit");

                                    b2.Property<string>("SeatBceNumber")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");
                                });
                        });

                    b.HasKey("Id");

                    b.ToTable("UserContexts");
                });
#pragma warning restore 612, 618
        }
    }
}
